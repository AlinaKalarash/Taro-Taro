package org.example;

import javax.swing.*;

public enum Cards {
    BLAZEN(1, "Блазень", "Невинність, свобода, оригінальність, пригоди, подорожі, дурість, безтурботність, ідеалізм, молодість, спонтанність, відсутність зобов’язань, нові починання"),
    MAGICIAN(2, "Маг", "Сила волі, майстерність, ініціатива, інтелект, комунікація, творчість, впевненість у собі"),
    ZRUCHA(3, "Верховна жриця", "Бажаність, недосяжність, таємниця, чуттєвість, духовність, жага пізнання, підсвідомість, вища сила, творчість, родючість"),
    IMPERATORKA(4, "Імператриця", "Вагітність, плідність, материнство, чуттєвість, виховання, творчість, краса, жіночність, природа, гармонія, мистецтво"),
    IMPERATOR(5, "Імператор", "Літній чоловік, стабільність, надійність, батьківство, образ батька, структура, захист, авторитет, логічний, практичний"),
    IEROFANT(6, "Ієрофант","Традиційні інститути, традиційні цінності, традиціоналізм, конформізм, шлюб, зобов’язання, релігія, переконання, обмін знаннями"),
    LOVERS(7, "Закохані", "Кохання, споріднені душі, ідеальні союзи, партнерства, стосунки, важливі рішення, романтика, бажання, сексуальні зв’язки, спільні цінності"),
    KOLISNUCHA(8, "Колісниця","Перемога, подолання перешкод, успіх, амбіції, рішучість, сила волі, контроль, самодисципліна, наполеглива праця та зосередженість"),
    STREIGHT(9,"Сила","Внутрішня сила, мужність, відвага, впевненість, співчуття, приборкання, контроль, подолання невпевненості в собі"),
    NOHOMOSMAN(10,"Відлюдник","Духовне просвітлення, пошук душі, саморефлексія, самоаналіз, споглядання, внутрішнє керівництво, самотність"),
    LUCKYWHEEL(11,"Колесо Фортуни", "Удача, доля, зміни, карма, споріднені душі, вирішальні моменти, цикли життя, доля, удача, потрясіння, випадковість"),
    SPRAVEDLUVIST(12,"Справедливість","Справедливість, кармічне правосуддя, наслідки, правові суперечки, право, правда, чесність, причина та наслідок, життєві уроки"),
    HEANDED(13,"Повішений","Почуття в пастці, замкнутість, самообмеження, відчуття невпевненості, відчуття відсутності напрямку, потреби звільнення, відпущення"),
    DEATH(14,"Смерть","Духовна трансформація, нові починання, відпущення, закінчення, зміни, перехід, раптові або несподівані потрясіння"),
    POMIRNIST(15,"Помірність","Врівноваженість, спокій, терпіння, помірність, внутрішній спокій, перспектива, гармонійні стосунки, споріднені душі"),
    DEVIL(16,"Диявол","Наркоманія, депресія, проблеми з психічним здоров’ям, закритість, одержимість, зрада, залежність, рабство, матеріалізм, сексуальність, безсилля, безнадія, образа, насильство, напад"),
    VECZA(17,"Вежа","Хаос, руйнування, раптові потрясіння, травма, несподівана зміна, катастрофа, втрата, трагедія, одкровення, плутанина, біль, розлучення, жорстоке поводження, насильство, банкрутство, стихійні лиха"),
    STAR(18,"Зірка","Надія, натхнення, творчість, спокій, задоволення, оновлення, безтурботність, духовність, зцілення, позитив"),
    MOON(19,"Місяць","Інтуїція, ілюзія, мрії, невизначеність, нестабільність, обман, тривога, страх, помилкове уявлення, підсвідомість, невпевненість"),
    SUN(20,"Сонце","Позитив, свобода, веселощі, успіх, оптимізм, життєві сили, радість, впевненість, самовираження, удача, ентузіазм, щастя, правда, відкритість, вагітність"),
    JUDGE(21,"Страшний Суд","Розсудливість, самооцінка, пробудження, оновлення, холоднокровність, рішучість, туга за домом, різкі судження, розподіл провини, прощення"),
    WORLD(22,"Світ","Успіх, досягнення, подорожі, завершення, реалізація, почуття причетності, цілісність");


    private final int id;
    private final String name;
    private final String description;

    // Конструктор
    Cards(int id, String name, String description) {
        this.id = id;
        this.name = name;
        this.description = description;
    }

    // Гетери
    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public String getDescription() {
        return description;
    }

    public static Cards getById(int id) {
        for (Cards card : Cards.values()) {
            if (card.id == id) {
                return card;
            }
        }
        throw new IllegalArgumentException("Карти з таким ID не існує: " + id);
    }
    public static void getAll(JFrame window){
        StringBuilder allCards = new StringBuilder();
        for (Cards card: Cards.values()) {
            allCards.append("Назва карти: ");
            allCards.append(card.getName()).append("\n");
            allCards.append("Її значення: ");
            allCards.append(card.getDescription()).append("\n");
        }
        JOptionPane.showMessageDialog(window, allCards.toString());
    }
}
